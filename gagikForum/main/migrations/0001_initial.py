# Generated by Django 4.2.5 on 2023-10-05 19:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(default=None, upload_to='Users', verbose_name='Фото')),
                ('wasBorn', models.DateField(null=True, verbose_name='Дата рождения')),
                ('my_story', models.TextField(verbose_name='Об авторе')),
                ('gender', models.CharField(choices=[('0', 'Сделайте выбор'), (1, 'М'), (2, 'Ж')], max_length=255, verbose_name='Гендер')),
                ('education', models.CharField(choices=[('0', 'Сделайте выбор'), ('1', 'Дошкольное'), (2, 'Начальное общее — 1—4 классы'), (3, 'Основное общее — 5—9 классы'), (4, 'Среднее общее — 10—11 классы'), (5, 'Среднее профисеональное'), (6, 'Высшее I степени — бакалавриат'), (7, 'Высшее II степени — специалитет, магистратура'), (8, 'Высшее III степени — подготовка кадров высшей квалификации')], max_length=255, verbose_name='Образование')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Номер телефона')),
                ('code_word', models.CharField(max_length=255, verbose_name='Кодовое слово')),
                ('country', models.CharField(max_length=255, verbose_name='Страна')),
                ('region', models.CharField(max_length=255, verbose_name='Область(Только для россиян)')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
